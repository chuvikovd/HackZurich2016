{"version":3,"sources":["chat.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;IA+EA,qBAAqB,QAAQ;QACzB,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,UAAS,QAAQ;YACtD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,IAAI,GAAG,GAAG;gBACN,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ;gBAC7B,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS;aACjC,CAAC;YACF,QAAQ,CAAC,GAAG,CAAC,CAAC;QAClB,CAAC,EAAE,UAAS,GAAG;YACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,CAAC,EACD;YACI,kBAAkB,EAAE,KAAK;YACzB,OAAO,EAAE,KAAK;YACd,UAAU,EAAE,KAAK;SACpB,CAAC,CAAA;IAAA,CAAC;;;;;;;;;;;;;YApFX;gBAiBI;oBAjBJ,iBAmEC;oBA3DG,WAAM,GAAU;wBACZ,SAAS,EAAE,KAAK;wBAChB,MAAM,EAAE,KAAK;qBAChB,CAAC;oBAQE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACpB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;oBAEvC,IAAI,CAAC,WAAW,GAAG,IAAI,mBAAY,CAAC;oBAEpC,IAAI,CAAC,cAAc,GAAG,IAAI,mBAAY,CAAC;oBAGvC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;wBACtB,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;wBACxC,KAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;oBACjC,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;wBACzB,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,IAAI;wBAC3B,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wBACrD,iCAAiC;wBACjC,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;wBAC1B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACrB,CAAC,CAAC,CAAC;oBAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,OAAgB;wBACvC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,OAAO,CAAC,IAAI,GAAG,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,GAAE,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;wBACjH,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACnC,CAAC,CAAC,CAAC;gBAEP,CAAC;gBApCD,+BAAS,GAAT;oBACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACvB,CAAC;gBAoCD,iCAAW,GAAX,UAAY,OAAO;oBACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,iBAAO,CAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAE,CAAC;oBAC/D,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,OAAO,CAAC,CAAC;gBAC9C,CAAC;gBAEF,8BAAQ,GAAR,UAAS,IAAI;oBACT,IAAI,IAAI,GAAG,IAAI,CAAC;oBAChB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBACxB,WAAW,CAAC,UAAS,GAAG;wBACpB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;wBACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,WAAI,CAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;wBAC7D,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC5F,CAAC,CAAC,CAAC;gBACP,CAAC;gBAjEL;oBAAC,iBAAU,EAAE;;+BAAA;gBAoEb,kBAAC;YAAD,CAnEA,AAmEC,IAAA;YAnED,qCAmEC,CAAA","file":"chat.service.js","sourcesContent":["import {Injectable, EventEmitter} from 'angular2/core';\r\nimport { Message } from '../models/Message'\r\nimport { User } from \"../models/User\";\r\n\r\nexport interface Server {\r\n    connected: boolean,\r\n    joined: boolean\r\n}\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n    socket;\r\n    user;\r\n\r\n    getMessage$: EventEmitter<any>;\r\n    getWelcomeMsg$: EventEmitter<any>;\r\n\r\n\r\n    server:Server = {\r\n        connected: false,\r\n        joined: false,\r\n    };\r\n\r\n    getServer(){\r\n        return this.server;\r\n    }\r\n\r\n    constructor() {\r\n\r\n        console.log(\"test\");\r\n        this.socket = io(window.location.host);\r\n\r\n        this.getMessage$ = new EventEmitter;\r\n\r\n        this.getWelcomeMsg$ = new EventEmitter;\r\n\r\n\r\n        this.socket.on(\"connect\", () => {\r\n            console.log(\"Connected to Chat Socket\");\r\n            this.server.connected = true;\r\n        });\r\n\r\n        this.socket.on(\"disconnect\", () => {\r\n            console.log(\"Disconnected from Chat Socket\");\r\n        });\r\n\r\n        this.socket.on(\"welcome\", (user) => {\r\n            console.log(\"Received welcome message: \", user.name);\r\n            //this.getWelcomeMsg$.emit(user);\r\n            this.server.joined = true;\r\n            this.user = user;\r\n        });\r\n\r\n        this.socket.on(\"message\", (message: Message) => {\r\n            console.log(message);\r\n            console.log(\"Message received: \" + message.body + \", from {\" + message.user.lat +\", \" + message.user.long + \"}\");\r\n            this.getMessage$.emit(message);\r\n        });\r\n\r\n    }\r\n\r\n    sendMessage(message) {\r\n        this.socket.emit(\"message\", new Message (message, this.user) );\r\n        console.log(\"Sending message: \" + message);\r\n     }\r\n\r\n    joinChat(name) {\r\n        var self = this;\r\n        console.log(\"test log\");\r\n        getLocation(function(pos){\r\n            console.log(\"test emit\");\r\n            self.socket.emit(\"join\", new User (name, pos.lat, pos.lng) );\r\n            console.log(\"Joining chat with username: \" + name + \" from \" + pos.lat + \" \" + pos.lng);\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction getLocation(callback) {\r\n    navigator.geolocation.getCurrentPosition(function(position) {\r\n        console.log(\"testttt\");\r\n        var pos = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude\r\n        };\r\n        callback(pos);\r\n    }, function(err){\r\n        console.log(err);\r\n        },\r\n        {\r\n            enableHighAccuracy: false,\r\n            timeout: 60000,\r\n            maximumAge: 60000\r\n        })}"],"sourceRoot":"/source/"}